# python の環境を構築

name: Python application

on: [push]
env:
  POSTGRES_USER: postgres
  POSTGRES_DB: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_SERVER: localhost
  POSTGRES_PORT: 5432
  PYTHONPATH: ${{ github.workspace }}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      schemaspy:
        image: schemaspy/schemaspy:snapshot
        ports:
          - 8080:8080
        options: >-
          --health-cmd wget -q -O - http://localhost:8080/ || exit 1
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        volumes:
          - ./.devcontainer/schemaspy/output:/output
          - ./.devcontainer/schemaspy/postgresql-42.4.0.jar:/postgresql-42.4.0.jar
          - ./.devcontainer/schemaspy/make.sh:/make.sh
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false
      - name: Poetry Version
        run: |
          poetry --version
      - name: Poetry Install Dependencies
        run: |
          poetry install --no-interaction -C ./app
      - name: alembic upgrade head
        run: |
          alembic upgrade head
        working-directory: ./app
      - name: Test with pytest
        run: |
          pytest -v
      - name: Build OpenAPI spec
        run: |
          python -c "from app.main import export_swagger; export_swagger()" > openapi.yml
      - name: Checkout swagger-ui
        uses: actions/checkout@v3
        with:
          repository: swagger-api/swagger-ui
          ref: v4.15.5
          path: swagger-ui
      - name: Inject Swagger static files
        run: |
          mkdir pages
          mkdir pages/swagger-ui
          cp -r swagger-ui/dist/* pages/swagger-ui
      - name: Inject OpenAPI spec
        run: |
          cp openapi.yml pages/swagger-ui/openapi.yml
          cp docs/swagger-ui.html pages/swagger-ui/index.html
          cp docs/index.html pages/index.html
      - name: run schemaspy
        run: |
          docker exec schemaspy sh /make.sh
          mkdir pages/schemaspy
          cp -r ./.devcontainer/schemaspy/output/* pages/schemaspy
      - uses: actions/upload-artifact@v3
        with:
          name: fastapi_doc
          path: pages
      - uses: actions/upload-pages-artifact@v1
        with:
          path: pages
  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - uses: actions/deploy-pages@v1
        id: deployment
